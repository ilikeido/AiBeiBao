static u_int8_t nat_buf[128] = {0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0};


t i;
    for( i = 0; i < p_sys->i_track; i++ )
    {
	live_track_t *tk = p_sys->track[i];
	MediaSubsession         *sub = tk->sub;
	int fd = sub->rtpSource()->RTPgs()->socketNum();
	if(tk->fmt.i_codec == VLC_CODEC_H264 && !var_GetBool( p_demux, "rtsp-tcp" ))
	{
		struct in_addr destinationAddr;
		destinationAddr.s_addr = inet_addr(p_sys->url.psz_host);
		char* dest_addr = inet_ntoa(destinationAddr);
		MAKE_SOCKADDR_IN(dest, destinationAddr.s_addr, htons(sub->serverPortNum));
		int bytesSent = 0;
		bytesSent = sendto(fd, nat_buf, 128, 0,
			               (struct sockaddr*)&dest, sizeof dest);
		msg_Dbg( p_demux, "send dest addr is %s:%d with byte %d fd %d", dest_addr, sub->serverPortNum, bytesSent, fd);
		if (bytesSent != 128) {
			msg_Dbg( p_demux, "writeSocket(%d), sendTo() error: wrote %d bytes instead of %d: ", fd, bytesSent, 128);
		}
	}
    }

